
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.List;
import java.sql.PreparedStatement;
import java.util.Vector;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sedan
 */
public class Kontrol_arayuz extends javax.swing.JFrame {

    /**
     * Creates new form Kontrol_arayuz
     */
    public Kontrol_arayuz() {
        initComponents();

    }

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
// Veri tabanı bağlantısı

    private void connect_db() {
        // VERİ TABANI BAĞLANTISI
        try {
            String url = "jdbc:postgresql://localhost:5432/knapsack";
            conn = DriverManager.getConnection(url, "postgres", "0000");
            //JOptionPane.showMessageDialog(null, "Başarılı");

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    String sorgu;
    int boyut = 0;
    int totalCapacity = 0;
    int optimumDeger = 0;
    int totalSelectedValue = 0;
    int totalSelectedWeight = 0;

    DefaultTableModel modelim = new DefaultTableModel();
    Object[] kolonlar = {"result"};
    Object[] satirlar = new Object[10];

    List<Integer> values = new ArrayList<>();
    List<Integer> weights = new ArrayList<>();
    List<Integer> selectedValues = new ArrayList<>();
    List<Integer> selectedWeights = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cb_boyut = new javax.swing.JComboBox<>();
        txt_optimumDeger = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_itemler = new javax.swing.JTextArea();
        btn_kontrol = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        lbl_hata = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Dosya Boyutu: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Dahil Edilen İtemler:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Optimum Değer:");

        cb_boyut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cb_boyut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seçiniz", "19", "45", "200" }));
        cb_boyut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_boyutActionPerformed(evt);
            }
        });

        txt_optimumDeger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_optimumDeger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_optimumDegerActionPerformed(evt);
            }
        });

        ta_itemler.setColumns(20);
        ta_itemler.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ta_itemler.setRows(5);
        jScrollPane1.setViewportView(ta_itemler);

        btn_kontrol.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_kontrol.setText("Kontrol");
        btn_kontrol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kontrolActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "En iyi 5 optimal sonuç"
            }
        ));
        table.setRowHeight(50);
        jScrollPane3.setViewportView(table);

        lbl_hata.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_hata.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cb_boyut, 0, 141, Short.MAX_VALUE)
                                .addComponent(txt_optimumDeger))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(162, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_kontrol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_hata, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cb_boyut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_optimumDeger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(233, 233, 233)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(221, 221, 221)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(btn_kontrol))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(434, 434, 434)
                        .addComponent(lbl_hata, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_optimumDegerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_optimumDegerActionPerformed

    }//GEN-LAST:event_txt_optimumDegerActionPerformed

    public void DosyaOku(String FileName) {
        //Boyutlarına göre dosya okuma işlemi
        String filePath = FileName;

        try ( BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            int lineCount = 0;

            while ((line = br.readLine()) != null) {
                if (lineCount == 0) {
                    totalCapacity = Integer.parseInt(line);
                } else {
                    String[] parts = line.split(" ");
                    values.add(Integer.parseInt(parts[0]));
                    weights.add(Integer.parseInt(parts[1]));
                }
                lineCount++;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void knapsack() {

        // Seçilen öğelerin 0 ve 1 li dizi halinde belirtildiği text areadan veri dosyasında indexinin bulunması
        connect_db();
        try {
            String selectedItemsString = ta_itemler.getText(); // Seçilen öğelerin string ifadesi
            String[] selectedItemsArray = selectedItemsString.split(" ");

            for (int i = 0; i < selectedItemsArray.length; i++) { //ilk satır kapasite olduğundan <= kullanmadım.
                if (selectedItemsArray[i].equals("1")) {
                    selectedValues.add(values.get(i));
                    selectedWeights.add(weights.get(i));
                    totalSelectedValue += values.get(i);
                    totalSelectedWeight += weights.get(i);

                }
            }

            //optimum değer işleme tabii tutulacağından int tipine dönüştürülür.
            optimumDeger = Integer.parseInt(txt_optimumDeger.getText());

            if (totalSelectedWeight <= totalCapacity) {
                //lbl_hata.setText("Seçilen öğelerin toplam ağırlığı kapasiteyi geçmiyor.");
                if (totalSelectedValue == optimumDeger) {
                    // Veri tabanına optimum değeri ve seçilen itemleri yazdır.                    
                    //lbl_hata.setText("Çözüm doğru!");
                    try {
                        pst = conn.prepareStatement("INSERT INTO bestresult(boyut,optimumDeger,secilenItemler,hataAciklamasi) VALUES (?,?,?,?)");
                        pst.setInt(1, boyut);
                        pst.setInt(2, optimumDeger);
                        pst.setString(3, ta_itemler.getText());
                        pst.setString(4, lbl_hata.getText());
                        pst.executeUpdate();
                        //JOptionPane.showMessageDialog(null, "Kontrol başarılı");
                    } catch (Exception e) {
                        //JOptionPane.showMessageDialog(null,e );
                        System.out.println(e);
                    }

                } else {
                    //JOptionPane.showMessageDialog(null, "Optimum değerle seçilmiş olan itemlerin toplamı uyuşmuyor!");
                    lbl_hata.setText("Optimum değerle seçilmiş olan itemlerin toplamı uyuşmuyor!");
                }
            } else {
                //hata mesajı bölgesine bunu yazdır
                //System.out.println("Seçilen öğelerin toplam ağırlığı kapasiteyi aşıyor.");
                lbl_hata.setText("Seçilen öğelerin toplam ağırlığı kapasiteyi aşıyor!");
            }

        } catch (Exception ex) {
            lbl_hata.setText("Metin dosyasının boyutundan farklı seçilen item dizisi!");
        }
    }

    public void Table(String sorgu) {

        modelim.setColumnCount(0);
        modelim.setRowCount(0);
        modelim.setColumnIdentifiers(kolonlar);

        try {
            pst = conn.prepareStatement(sorgu);
            rs = pst.executeQuery();
            while (rs.next()) {
                satirlar[0] = rs.getString("optimumDeger");
                modelim.addRow(satirlar);
            }
            table.setModel(modelim);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }
    
    private void btn_kontrolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kontrolActionPerformed

        // veri tabanı bağlama ve tabloya yazdırma
        // Knapsack Kontrolü       
        if (cb_boyut.getSelectedIndex() == 1) {
            boyut = 19;
            DosyaOku("data\\ks_19_0.txt");
            knapsack();
            Table("SELECT optimumDeger FROM bestresult WHERE boyut = 19 ORDER BY optimumDeger DESC; ");
        } else if (cb_boyut.getSelectedIndex() == 2) {
            boyut = 45;
            DosyaOku("data\\ks_45_0.txt");
            knapsack();
            Table("SELECT optimumDeger FROM bestresult WHERE boyut = 45 ORDER BY optimumDeger DESC; ");
        } else if (cb_boyut.getSelectedIndex() == 3) {
            boyut = 200;
            DosyaOku("data\\ks_200_1.txt");
            knapsack();
            Table("SELECT optimumDeger FROM bestresult WHERE boyut = 200 ORDER BY optimumDeger DESC; ");
        } else {
            JOptionPane.showMessageDialog(null, "Boyut seçiniz.");
        }
        
        


    }//GEN-LAST:event_btn_kontrolActionPerformed

    private void cb_boyutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_boyutActionPerformed

    }//GEN-LAST:event_cb_boyutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kontrol_arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kontrol_arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kontrol_arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kontrol_arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kontrol_arayuz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_kontrol;
    private javax.swing.JComboBox<String> cb_boyut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbl_hata;
    private javax.swing.JTextArea ta_itemler;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt_optimumDeger;
    // End of variables declaration//GEN-END:variables
}
